From 07f16dfac9a66d32f3e2acc34d03e318227310fe Mon Sep 17 00:00:00 2001
From: Holger Frydrych <holger@frydrych.org>
Date: Sun, 17 Sep 2023 13:40:17 +0200
Subject: [PATCH 5/5] Ensure dxvk loads all required Vulkan extensions for
 OpenVR support

---
 src/dxvk/dxvk_openvr.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/dxvk/dxvk_openvr.cpp b/src/dxvk/dxvk_openvr.cpp
index c0ee42d7..9b29cc84 100644
--- a/src/dxvk/dxvk_openvr.cpp
+++ b/src/dxvk/dxvk_openvr.cpp
@@ -263,7 +263,7 @@ namespace dxvk {
 
       // If the app has not initialized OpenVR yet, we need
       // to do it now in order to grab a compositor instance
-      g_vrFunctions.initInternal(&error, vr::VRApplication_Background);
+      g_vrFunctions.initInternal(&error, vr::VRApplication_Scene);
       m_initializedOpenVr = error == vr::VRInitError_None;
 
       if (error != vr::VRInitError_None) {
@@ -305,12 +305,12 @@ namespace dxvk {
 
 
   HMODULE VrInstance::loadLibrary() {
-    HMODULE handle;
+    HMODULE handle = nullptr;
 
     // Use openvr_api.dll only if already loaded in the process (and reference it which GetModuleHandleEx does without
     // GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT flag).
     if (!::GetModuleHandleEx(0, "openvr_api.dll", &handle))
-      handle = ::LoadLibrary("openvr_api_dxvk.dll");
+      handle = ::LoadLibrary("openvr_api.dll");
 
     m_loadedOvrApi = handle != nullptr;
     return handle;
-- 
2.39.0.windows.2

